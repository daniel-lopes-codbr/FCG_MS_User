// <auto-generated />
using System;
using FCG_MS_Users.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FCG_MS_Users.Infrastructure.Migrations
{
    [DbContext(typeof(UserRegistrationDbContext))]
    [Migration("20250820200134_SeedAdminUser")]
    partial class SeedAdminUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("fcg_user")
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FCG_MS_Users.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("users", "fcg_user");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bacbbe47-017e-49a0-bd1a-5bbc2a2ffaca"),
                            Name = "Admin FIAP"
                        });
                });

            modelBuilder.Entity("FCG_MS_Users.Domain.Entities.UserAuthorization", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Permission")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("permission");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("userAuthorizations", "fcg_user");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95cbf698-2295-4ee5-a2fe-1d4bde8a6479"),
                            Permission = "Admin",
                            UserId = new Guid("bacbbe47-017e-49a0-bd1a-5bbc2a2ffaca")
                        });
                });

            modelBuilder.Entity("FCG_MS_Users.Domain.Entities.User", b =>
                {
                    b.OwnsOne("FCG_MS_Users.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)")
                                .HasColumnName("email");

                            b1.HasKey("UserId");

                            b1.ToTable("users", "fcg_user");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = new Guid("bacbbe47-017e-49a0-bd1a-5bbc2a2ffaca"),
                                    Value = "admin@fiap.com"
                                });
                        });

                    b.OwnsOne("FCG_MS_Users.Domain.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("HasedValue")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("password_hash");

                            b1.HasKey("UserId");

                            b1.ToTable("users", "fcg_user");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = new Guid("bacbbe47-017e-49a0-bd1a-5bbc2a2ffaca"),
                                    HasedValue = "100000.pbPQTpVLfm103U12g0gaTQ==.J3pVae2Sl9rKsuJDC7jci69KXk0/X21y0M0lYZmBo+E="
                                });
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();
                });

            modelBuilder.Entity("FCG_MS_Users.Domain.Entities.UserAuthorization", b =>
                {
                    b.HasOne("FCG_MS_Users.Domain.Entities.User", "User")
                        .WithOne("Authorization")
                        .HasForeignKey("FCG_MS_Users.Domain.Entities.UserAuthorization", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FCG_MS_Users.Domain.Entities.User", b =>
                {
                    b.Navigation("Authorization")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
